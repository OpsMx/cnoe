apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: slack
spec:
  dependencies:
  - eventName: webhook
    eventSourceName: webhook
    name: webhook-generic
    transform:
      script: |-
        event.body.message = "Received:" .. event.body.message .. "with additional text:" .. event.body.text
        return event
  - eventName: opsmxpush 
    eventSourceName: opsmxgitpush
    name: opsmxpush-generic      
    # Using an unused field in the json in the lua script to create a reasonable message
    transform:
      script: |-
        event.body.sender.gravatar_id = "Push to branch" .. event.body.ref ..  " in repo " ..  event.body.repository.name .. "Hash: " ..  event.body.after
        return event
    filters:
      data:
      - path: body.ref
        type: string
        value:
        - "refs/heads/main"   # Trigger for push only on main
  triggers:
    - parameters:
        - src:
            dependencyName: webhook-generic
            dataKey: body.message
          dest: slack.message
      template:
        conditions: "webhook-generic"
        name: slack-trigger-webhook
        slack:
          slackToken:
            key: token
            name: slack-token
          channel: isd-slackops-notification
          message: Unchanged message
    - parameters:
        - src:
            dependencyName: opsmxpush-generic
            dataKey: body.sender.gravatar_id
          dest: slack.message
      template:
        conditions: "opsmxpush-generic"
        name: slack-trigger-opsmx
        slack:
          slackToken:
            key: token
            name: slack-token
          channel: isd-slackops-notification
          message: Unchanged message
